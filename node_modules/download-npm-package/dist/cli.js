'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _home = require('home');

var _mkdirp = require('mkdirp');

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (_ref) => {
  var _ref2 = _slicedToArray(_ref, 4);

  let arg = _ref2[2];
  var _ref2$ = _ref2[3];

  let _dir = _ref2$ === undefined ? process.cwd() : _ref2$;

  const dir = (0, _home.resolve)(_dir);
  (0, _mkdirp.sync)(dir);
  (0, _index2.default)({ arg: arg, dir: dir }).then(() => {
    console.log(`finished downloading ${arg}`);
  }).catch(err => {
    console.log(err);
    throw err;
  });
};