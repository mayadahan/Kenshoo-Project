'use strict';

var _registryInfo = require('registry-info');

var _registryInfo2 = _interopRequireDefault(_registryInfo);

var _npmPackageArg = require('npm-package-arg');

var _npmPackageArg2 = _interopRequireDefault(_npmPackageArg);

var _got = require('got');

var _got2 = _interopRequireDefault(_got);

var _httpHttpsAgent = require('http-https-agent');

var _httpHttpsAgent2 = _interopRequireDefault(_httpHttpsAgent);

var _urlJoin = require('url-join');

var _urlJoin2 = _interopRequireDefault(_urlJoin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getAgent = (0, _httpHttpsAgent2.default)({
  keepAlive: true,
  maxSockets: 20
});

module.exports = function (packageName) {
  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var _npa = (0, _npmPackageArg2.default)(packageName),
      scope = _npa.scope,
      escapedName = _npa.escapedName;

  var _getRegistryInfo = (0, _registryInfo2.default)(scope),
      authorization = _getRegistryInfo.authorization,
      registryUrl = _getRegistryInfo.registryUrl;

  var _opts$registry = opts.registry,
      registry = _opts$registry === undefined ? registryUrl : _opts$registry;

  var headers = authorization ? { authorization: authorization } : {};
  var url = (0, _urlJoin2.default)(registry, escapedName);
  var agent = getAgent(url);

  return (0, _got2.default)(url, { headers: headers, json: true, agent: agent }).then(function (_ref) {
    var body = _ref.body;
    return body;
  });
};